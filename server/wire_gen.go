// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package server

import (
	"github.com/sandykarunia/fudge/flags"
	"github.com/sandykarunia/fudge/grader"
	"github.com/sandykarunia/fudge/grader/taskrunner"
	"github.com/sandykarunia/fudge/groundcheck"
	"github.com/sandykarunia/fudge/groundcheck/checkers"
	"github.com/sandykarunia/fudge/groundcheck/sniffers"
	"github.com/sandykarunia/fudge/logger"
	"github.com/sandykarunia/fudge/sandbox"
	"github.com/sandykarunia/fudge/sdk"
	"github.com/sandykarunia/fudge/server/handler"
	"github.com/sandykarunia/fudge/utils"
)

// Injectors from server_wire.go:

func Instance() Server {
	osFunctions := sdk.ProvideOSFunctions()
	execFunctions := sdk.ProvideExecFunctions()
	system := utils.ProvideSystem(osFunctions, execFunctions)
	ioFunctions := sdk.ProvideIOFunctions()
	file := utils.ProvideFile(ioFunctions, osFunctions)
	path := utils.ProvidePath(system, osFunctions)
	checkersCheckers := checkers.Provider(system, file, path)
	sniffersSniffers := sniffers.Provider(system)
	groundCheck := groundcheck.Provider(checkersCheckers, sniffersSniffers)
	loggerLogger := logger.Provider(osFunctions, path)
	flagFunctions := sdk.ProvideFlagFunctions()
	flagsFlags := flags.Provider(flagFunctions)
	factory := sandbox.Provider(osFunctions, ioFunctions, flagsFlags, path, system, loggerLogger)
	utilsString := utils.ProvideString()
	httpFunctions := sdk.ProvideHTTPFunctions()
	taskRunner := taskrunner.Provider(factory, loggerLogger, utilsString, httpFunctions)
	graderGrader := grader.Provider(loggerLogger, taskRunner)
	handlerHandler := handler.Provider(graderGrader, loggerLogger)
	server := Provider(groundCheck, handlerHandler, loggerLogger)
	return server
}
